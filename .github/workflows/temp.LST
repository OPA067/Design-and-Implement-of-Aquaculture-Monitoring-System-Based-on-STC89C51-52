C51 COMPILER V9.01   TEMP                                                                  06/04/2022 12:11:57 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN temp.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE temp.c ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"temp.h"
   2          void Delay1ms(uint y)   //延时1ms
   3          {
   4   1              uint x;
   5   1              for(;y>0;y--)
   6   1                      for(x=110;x>0;x--);
   7   1      }
   8          uchar Ds18b20Init()
   9          {
  10   1              uchar i;
  11   1              DSPORT=0;                       //将总线拉低480us~960us
  12   1              i=70;   
  13   1              while(i--);                     //延时642us
  14   1              DSPORT=1;                       //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  15   1              i=0;
  16   1              while(DSPORT)           //等待DS18B20拉低总线
  17   1              {
  18   2                      Delay1ms(1);
  19   2                      i++;
  20   2                      if(i>5)                 //等待>5MS
  21   2                      {
  22   3                              return 0;       //初始化失败
  23   3                      }
  24   2              
  25   2              }
  26   1              return 1;                       //初始化成功
  27   1      }
  28          void Ds18b20WriteByte(uchar dat)
  29          {
  30   1              uint i,j;
  31   1              for(j=0;j<8;j++)
  32   1              {
  33   2                      DSPORT=0;           //每写入一位数据之前先把总线拉低1us
  34   2                      i++;
  35   2                      DSPORT=dat&0x01;//然后写入一个数据，从最低位开始
  36   2                      i=6;
  37   2                      while(i--);     //延时68us，持续时间最少60us
  38   2                      DSPORT=1;               //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  39   2                      dat>>=1;
  40   2              }
  41   1      }
  42          uchar Ds18b20ReadByte()
  43          {
  44   1              uchar byte,bi;
  45   1              uint i,j;       
  46   1              for(j=8;j>0;j--)
  47   1              {
  48   2                      DSPORT=0;                               //先将总线拉低1us
  49   2                      i++;
  50   2                      DSPORT=1;                               //然后释放总线
  51   2                      i++;
  52   2                      i++;                                    //延时6us等待数据稳定
  53   2                      bi=DSPORT;                              //读取数据，从最低位开始读取
  54   2                      byte=(byte>>1)|(bi<<7);                                           
  55   2                      i=4;                                    //读取完之后等待48us再接着读取下一个数
C51 COMPILER V9.01   TEMP                                                                  06/04/2022 12:11:57 PAGE 2   

  56   2                      while(i--);
  57   2              }                               
  58   1              return byte;
  59   1      }
  60          void  Ds18b20ChangTemp()
  61          {
  62   1              Ds18b20Init();
  63   1              Delay1ms(1);
  64   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令                
  65   1              Ds18b20WriteByte(0x44);     //温度转换命令
  66   1      }
  67          void  Ds18b20ReadTempCom()
  68          {       
  69   1                                        
  70   1              Ds18b20Init();
  71   1              Delay1ms(1);
  72   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令
  73   1              Ds18b20WriteByte(0xbe);         //发送读取温度命令
  74   1      }
  75          int Ds18b20ReadTemp()
  76          {
  77   1              int temp=0;
  78   1              uchar tmh, tml;
  79   1              Ds18b20ChangTemp();                             //先写入转换命令
  80   1              Ds18b20ReadTempCom();                   //然后等待转换完后发送读取温度命令
  81   1              tml=Ds18b20ReadByte();          //读取温度值共16位，先读低字节
  82   1              tmh=Ds18b20ReadByte();          //再读高字节
  83   1              temp=tmh;
  84   1              temp<<=8;
  85   1              temp|=tml;
  86   1              return temp;
  87   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    234    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
