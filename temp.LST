C51 COMPILER V9.01   TEMP                                                                  06/05/2022 06:55:29 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN temp.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE temp.c ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"temp.h"
   2          void Delay1ms(uint y)                   //延时1ms
   3          {
   4   1              uint x;
   5   1              for(;y>0;y--)
   6   1                      for(x=110;x>0;x--);
   7   1      }
   8          
   9          uchar Ds18b20Init()
  10          {
  11   1              uchar i;
  12   1              DSPORT=0;                                       //将总线拉低480us~960us
  13   1              i=70;   
  14   1              while(i--);                                     //延时642us
  15   1              DSPORT=1;                                       //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  16   1              i=0;
  17   1              while(DSPORT)                           //等待DS18B20拉低总线
  18   1              {
  19   2                      Delay1ms(1);
  20   2                      i++;
  21   2                      if(i>5)                                 //等待>5MS
  22   2                      {
  23   3                              return 0;                       //初始化失败
  24   3                      }
  25   2              
  26   2              }
  27   1              return 1;                                       //初始化成功
  28   1      }
  29          void Ds18b20WriteByte(uchar dat)
  30          {
  31   1              uint i,j;
  32   1              for(j=0;j<8;j++)
  33   1              {
  34   2                      DSPORT=0;                       //每写入一位数据之前先把总线拉低1us
  35   2                      i++;
  36   2                      DSPORT=dat&0x01;                //然后写入一个数据，从最低位开始
  37   2                      i=6;
  38   2                      while(i--);                     //延时68us，持续时间最少60us
  39   2                      DSPORT=1;                               //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  40   2                      dat>>=1;
  41   2              }
  42   1      }
  43          uchar Ds18b20ReadByte()
  44          {
  45   1              uchar byte,bi;
  46   1              uint i,j;       
  47   1              for(j=8;j>0;j--)
  48   1              {
  49   2                      DSPORT=0;                               //先将总线拉低1us
  50   2                      i++;
  51   2                      DSPORT=1;                               //然后释放总线
  52   2                      i++;
  53   2                      i++;                                    //延时6us等待数据稳定
  54   2                      bi=DSPORT;                              //读取数据，从最低位开始读取
  55   2                      byte=(byte>>1)|(bi<<7);                                           
C51 COMPILER V9.01   TEMP                                                                  06/05/2022 06:55:29 PAGE 2   

  56   2                      i=4;                                    //读取完之后等待48us再接着读取下一个数
  57   2                      while(i--);
  58   2              }                               
  59   1              return byte;
  60   1      }
  61          void  Ds18b20ChangTemp()
  62          {
  63   1              Ds18b20Init();
  64   1              Delay1ms(1);
  65   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令                
  66   1              Ds18b20WriteByte(0x44);     //温度转换命令
  67   1      }
  68          void  Ds18b20ReadTempCom()
  69          {       
  70   1                                        
  71   1              Ds18b20Init();
  72   1              Delay1ms(1);
  73   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令
  74   1              Ds18b20WriteByte(0xbe);         //发送读取温度命令
  75   1      }
  76          int Ds18b20ReadTemp()
  77          {
  78   1              int temp=0;
  79   1              uchar tmh, tml;
  80   1              Ds18b20ChangTemp();                     //先写入转换命令
  81   1              Ds18b20ReadTempCom();           //然后等待转换完后发送读取温度命令
  82   1              tml=Ds18b20ReadByte();          //读取温度值共16位，先读低字节
  83   1              tmh=Ds18b20ReadByte();          //再读高字节
  84   1              temp=tmh;
  85   1              temp<<=8;
  86   1              temp|=tml;
  87   1              return temp;
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    234    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
